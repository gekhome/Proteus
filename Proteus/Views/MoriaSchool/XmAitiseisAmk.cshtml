@model Proteus.Models.XmAutoAmkViewModel

@using Proteus.DAL;
@using Proteus.Models;


@{
    ViewBag.Title = "Επιτυχόντες (ΑΜΚ)";
    Layout = "~/Views/Shared/_SchoolLayout.cshtml";
}

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Καταχώρηση Α.Μ. επιτυχόντων και μεταφορά στο μητρώο σπουδαστών</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "MoriaMain", "School", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
    @(Html.Kendo().Grid<XmAitiseisAmkViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.ΑΜΚ).Width(10).Groupable(false).Filterable(false);
            columns.Bound(c => c.ΕΠΩΝΥΜΟ).Width(30).Groupable(false);
            columns.Bound(c => c.ΟΝΟΜΑ).Width(30).Groupable(false);
            columns.ForeignKey(f => f.ΕΙΔΙΚΟΤΗΤΑ, (IEnumerable<viewIEK_EIDIKOTITES>)ViewData["IekEidikotites"], "EIDIKOTITA_ID", "EIDIKOTITA_TEXT").Width(76);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Save();
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Groupable()
        .Navigatable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .Filterable()
        .HtmlAttributes(new { style = "display: block;font-size:11px" })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(360))
        .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(40)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.ΑΙΤΗΣΗ_ΚΩΔ);
            model.Field(m => m.ΕΙΔΙΚΟΤΗΤΑ).DefaultValue(ViewData["defaultEidikotita"]);
        })
        .Read(read => read.Action("XmAitiseisAmk_Read", "MoriaSchool"))
        .Update(update => update.Action("XmAitiseisAmk_Update", "MoriaSchool"))
        .Events(events => events.Error("error_handler"))
        )
    )
</div>
<div class="body-content" style="margin:5px 30px 5px 30px;font-size:14px;background-color:dimgray;padding:4px 4px 4px 4px;min-height:40px">
    <span style="margin-right:10px;margin-left:5px;float:right;font-family:'Segoe UI';font-size:13px">
        <input style="font-family:'Segoe UI';font-size:13px" type="button" onclick="transferStudents()" value="Εισαγωγή στο μητρώο σπουδαστών" class="btn btn-default" />
    </span>
    <span style="margin-bottom:5px;min-width:400px;float:left;color:white;">
        @Html.LabelFor(model => model.initialAmk, new { @class = "control-label col-md-4", @style = "margin-top:4px" })
        @Html.EditorFor(model => model.initialAmk, new { htmlAttributes = new { @Id = "textbox", @class = "form-control col-md-3", @style = "max-width:90px;max-height:32px" } })
        <input style="font-family:'Segoe UI';font-size:13px;margin-left:5px;" type="button" onclick="autoNumber()" value="Αυτόματη αρίθμηση" class="btn btn-default" />
    </span>
    @*<span>
        <input style="font-family:'Segoe UI';font-size:13px;margin-left:5px;" type="button" onclick="transferStudents()" value="Αυτόματη αρίθμηση" class="btn btn-default" />
    </span>*@
</div>


<script type="text/javascript">

    function transferStudents() {

        $.ajax({
            url: '@Url.Action("XmTransferStudents", "MoriaSchool")',
            type: 'GET',
            data: '',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") alert(data);
            },
            error: function () {
                MessageBoxAlert("Προέκυψε σφάλμα ανάκτησης δεδομένων.");
            }
        });
    }

    function autoNumber() {

        var initialAmk = $("#textbox").val();
        //alert("initialAmk = " + initialAmk);

        $.ajax({
            url: '@Url.Action("AutoNumberAMK", "School")?initial_amk=' + initialAmk,
            type: 'POST',
            data: "",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != "") alert(data);
                RefreshGrid();
            }
        });
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();

    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            RefreshGrid(e);
        }
    }

</script>
