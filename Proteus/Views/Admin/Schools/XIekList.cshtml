@using Proteus.DAL;
@using Proteus.Models;

@{
    ViewBag.Title = "Στοιχεία ΙΕΚ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 11px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Στοιχεία των ΙΕΚ</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<SYS_SCHOOLSViewModel>()
        .Name("schools")
        .Columns(columns =>
        {
            columns.Bound(c => c.SCHOOL_NAME).Width(30).Groupable(false)
                .ClientFooterTemplate("Συνολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.ForeignKey(f => f.SCHOOL_PERIFERIAKI_ID, (IEnumerable<SYS_PERIFERIAKES>)ViewData["periferiakes"], "PERIFERIAKI_ID", "PERIFERIAKI").Width(40);
            columns.Bound(c => c.SCHOOL_DIRECTOR).Width(30);
            columns.Template(
            @<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("XSchoolEdit", "Admin") + "?schoolId=#=SCHOOL_ID#' target = _blank><span class=\"k-icon k-edit\"></span>Επεξεργασία</a>"
            ).Width(16);
        })
        .HtmlAttributes(new { style="font-size:12px" })
        .Selectable()
        .Groupable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(300))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(40)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.SCHOOL_ID);
            })
            .Read(read => read.Action("Iek_Read", "Admin"))
            .Aggregates(a =>
            {
                a.Add(p => p.SCHOOL_NAME).Count();
            })
            .Events(events => events.Error("error_handler"))
            )
        .Events(events => events.Change("change"))

        )  @* --- data grid ---*@
</div>

<div id="partialDiv" class="body-content" style="margin:15px 30px 5px 30px">
    @Html.Partial("XIekPartial")
</div>

<script id="events" type="text/javascript">

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var schoolID = dataItem.SCHOOL_ID;

        $.ajax({
            url: '@Url.Action("GetIekRecord", "Admin")?schoolId=' + schoolID,
            type: 'GET',
            data: "",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#partialDiv").html(data);
            },
            error: function () {
                MessageBoxAlert("Προέκυψε σφάλμα ανάκτησης δεδομένων.");
            }
        });
    }

    function RefreshGrid(e) {
        var grid = $("#schools").data("kendoGrid");
        grid.dataSource.read();

    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
    }

</script>





