@using Proteus.DAL;
@using Proteus.Models;

@{
    ViewBag.Title = "Τμήματα ΙΕΚ";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 11px;
    }

    .k-grid .k-alt {
        background-color: #e9e9e9; /* specify the alternate background-color */
    }
</style>

<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Τμήματα των ΙΕΚ</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-success" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin:5px 30px 5px 30px">

    @(Html.Kendo().Grid<TmimaViewModel>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.ForeignKey(f => f.ΙΕΚ, (IEnumerable<SYS_SCHOOLS>)ViewData["schools"], "SCHOOL_ID", "SCHOOL_NAME").Width(24);
        columns.ForeignKey(f => f.ΕΙΔΙΚΟΤΗΤΑ_ΚΩΔ, (IEnumerable<viewIEK_EIDIKOTITES>)ViewData["eidikotitesIek"], "EIDIKOTITA_ID", "EIDIKOTITA_TEXT").Width(56);
        columns.ForeignKey(f => f.ΠΕΡΙΟΔΟΣ_ΚΩΔ, (IEnumerable<ΠΕΡΙΟΔΟΙ>)ViewData["periodoi"], "PERIOD_ID", "ΠΕΡΙΟΔΟΣ").Width(12);
        columns.ForeignKey(f => f.ΕΞΑΜΗΝΟ, (IEnumerable<SYS_TERM>)ViewData["terms"], "TERM_ID", "TERM").Width(12);
        columns.ForeignKey(f => f.ΠΑ_ΚΩΔ, (IEnumerable<ΠΑ>)ViewData["pa"], "ΠΑ_ΚΩΔ", "ΠΑ_ΛΕΚΤΙΚΟ").Width(14);
        columns.Bound(m => m.ΤΜΗΜΑ_ΟΝΟΜΑ).Groupable(false).Width(18);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(38);
    })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
        })
        .HtmlAttributes(new { style = "font-size:12px" })
        .Editable(editable => editable.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
        .Navigatable()
        .Filterable()
        .Groupable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(400))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .DataSource(datasource => datasource
            .Ajax()
            .PageSize(60)
            .ServerOperation(true)
            .Model(model =>
            {
                model.Id(p => p.ΤΜΗΜΑ_ΚΩΔ);
                model.Field(p => p.ΙΕΚ).DefaultValue((int)ViewData["defaultSchool"]);
                model.Field(p => p.ΕΙΔΙΚΟΤΗΤΑ_ΚΩΔ).DefaultValue(ViewData["defaultEidikotita"]);
                model.Field(p => p.ΠΕΡΙΟΔΟΣ_ΚΩΔ).DefaultValue(1);
                model.Field(p => p.ΕΞΑΜΗΝΟ).DefaultValue(1);
                model.Field(p => p.ΠΑ_ΚΩΔ).DefaultValue(1);
            })
            .Create(create => create.Action("Tmima_Create", "Admin"))
            .Read(read => read.Action("Tmima_Read", "Admin"))
            .Update(update => update.Action("Tmima_Update", "Admin"))
            .Destroy(destroy => destroy.Action("Tmima_Destroy", "Admin"))
            .Group(groups => groups.Add(p => p.ΙΕΚ))
            .Events(events => events.Error("error_handler"))
        ) @* datasource*@
    )

</div>

<div class="row" style="margin-top:10px;margin-left:30px;margin-right:30px;">
    @(Html.Kendo().PanelBar()
    .Name("Help")
    .Items(items =>
    {
    items.Add()
        .Text("Σχετικά με την ονομασία τμήματος")
        .Selected(true)
        .Expanded(false)
        .Content(
        @<text>
            <div style="margin-left:6px;margin-right:6px">
                <font style="font-family:'Segoe UI';font-size:large">Τι προτείνεται για την ονομασία ενός τμήματος</font>
                <p></p>
                <ul>
                    <li>
                        Στη στήλη "Ονομασία" συνιστάται να καταχωρείται το αναγνωριστικό του τμήματος ως εξής:
                    </li>
                    <li>
                        Κωδικός περιόδου, π.χ. 2008Ε (δηλ. έτος 2008 και εξάμηνο Εαρινό) και μετά παύλα "-"
                    </li>
                    <li>
                        Συντομογραφία της ειδικότητας (3 έως 10 χαρακτήρες) π.χ. ΜΑΓ για Τεχνικός Μαγειρικής Τέχνης και μετά παύλα "-"
                    </li>
                    <li>
                        Χαρακτηριστικό του εξαμήνου σπουδών π.χ. Γ1 που σημαίνει Γ' εξάμηνο σπουδών και ένας αύξων αριθ. του τμήματος,
                        π.χ. 1 για  πρωινό τμήμα, 2 για  απογευματινό τμήμα ή απλώς 1ο ή 2ο τμήμα εάν τα ωράριά τους συμπίπτουν.
                    </li>
                </ul>
                <p></p>
                <div style="margin-left:6px;margin-right:6px">
                    <font style="font-family:'Segoe UI';font-size:large;margin-bottom:10px;">Παράδειγμα</font>
                    <p></p>
                    2008Ε-ΑΙΣΘ-Β2 σημαίνει ότι το τμήμα λειτουργεί την χειμερινή περίοδο του 2008, η ειδικότητα είναι ΕΙΔΙΚΟΣ ΕΦΑΡΜΟΓΩΝ ΑΙΣΘΗΤΙΚΗΣ,
                    το τμήμα είναι Β' εξαμήνου σπουδών και απογευματινό.
                    <p></p>
                </div>
                <div style="margin-left:6px;margin-right:6px">
                    <font style="font-family:'Segoe UI';font-weight:bold;margin-bottom:10px;">
                        <p></p>
                        Η τήρηση της σύμβασης αυτής είναι σημαντική για τις εγγραφές των σπουδαστών, όπου ζητείται να επιλεγεί τμήμα με βάση
                        το αναγνωριστικό του. Μια απλή ονομασία π.χ. Α1 ή Γ2 δεν παρέχει καμία πληροφορία για την περίοδο και το τμήμα, στοιχεία
                        απαραίτητα για την ορθή επιλογή τμήματος και οδηγεί με βεβαιότητα σε εσφαλμένες επιλογές τμημάτων.
                    </font>
                    <p></p>
                </div>

            </div>
            <p></p>
        </text>);
    })
    )
    </div>


<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        RefreshGrid(e);
    }

</script>

