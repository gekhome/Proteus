@using Proteus.DAL;
@using Proteus.Models;


@{
    ViewBag.Title = "Βεβαιώσεις ανάληψης";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 11px;
    }
</style>

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Βεβαιώσεις ανάληψης καθηκόντων</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-primary" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

    <div class="body-content" style="margin:10px 30px 5px 30px">

        @(Html.Kendo().Grid<TeacherAnalipsiViewModel>()
        .Name("analipseis")
        .HtmlAttributes(new { style = "display: block;font-size:12px" })
        .Navigatable()
        .Filterable()
        .Groupable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .Scrollable(scr => scr.Height(420))
        .Columns(columns =>
        {
            columns.ForeignKey(f => f.ΙΕΚ, (IEnumerable<SYS_SCHOOLS>)ViewData["schools"], "SCHOOL_ID", "SCHOOL_NAME").Width(25)
                .ClientFooterTemplate("Ολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.ForeignKey(f => f.PERIOD_ID, (IEnumerable<ΠΕΡΙΟΔΟΙ>)ViewData["periodoi"], "PERIOD_ID", "ΠΕΡΙΟΔΟΣ").Width(14);
            columns.ForeignKey(f => f.TEACHER_ID, (IEnumerable<sqlTEACHERS_IN_PERIODS>)ViewData["teachers"], "TEACHER_ID", "ΟΝΟΜΑΤΕΠΩΝΥΜΟ").Width(40);
            columns.Bound(c => c.ΠΡΩΤΟΚΟΛΛΟ).Width(12).Groupable(false);
            columns.Bound(c => c.ΗΜΕΡΟΜΗΝΙΑ).Width(16);
            columns.Template(
                @<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("XTeacherAnalipsiPrint", "Admin") + "?analipsiId=#=ΑΝΑΛΗΨΗ_ΚΩΔ#' target = _blank><span class=\"k-icon k-justifyFull\"></span>Εκτύπωση</a>"
            ).Width(16);
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(60)
            .ServerOperation(true)
            .Model(model =>
            {
                model.Id(p => p.ΑΝΑΛΗΨΗ_ΚΩΔ);
            })
            .Read(read => read.Action("TeacherAnalipsi_Read", "Admin"))
            .Aggregates(a =>
            {
                a.Add(p => p.ΙΕΚ).Count();
            })
            //.Group(groups => groups.Add(p => p.ΙΕΚ))
        )
        )

</div>

<script>

    function filterTeachers() {
        var periodID = $("#PERIOD_ID").data("kendoDropDownList").value();
        alert("periodID=" + periodID);
        return {
            periodId: periodID
        };
    }

    function RefreshGrid(e) {
        var grid = $("#analipseis").data("kendoGrid");
        grid.dataSource.read();
    }

</script>

