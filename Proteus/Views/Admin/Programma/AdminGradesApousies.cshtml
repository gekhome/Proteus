@using Proteus.DAL;
@using Proteus.Models;

@{
    ViewBag.Title = "Βαθμολογίες και απουσίες";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Καταστάσεις βαθμολογιών και απουσιών</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin:10px 20px 5px 20px;background-color:dimgray;padding:4px 4px 4px 4px;min-height:36px">
    <label style="margin-left:5px;font-size:13px;font-weight:bold;color:white">Σχολική Μονάδα : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlschool")
        .DataTextField("SCHOOL_NAME")
        .DataValueField("SCHOOL_ID")
        .HtmlAttributes(new { style = "width:260px;font-size:13px;font-weight:bold" })
        .OptionLabel("Επιλογή ...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetSchools", "Admin"); }); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
</div>

<div class="body-content" style="margin:5px 30px 5px 30px">

    @(Html.Kendo().Grid<sqlTmimataViewModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.ForeignKey(f => f.ΙΕΚ, (IEnumerable<SYS_SCHOOLS>)ViewData["schools"], "SCHOOL_ID", "SCHOOL_NAME").Width(20);
            columns.Bound(c => c.EIDIKOTITA_TEXT).Width(60)
                .ClientFooterTemplate("Συνολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.ΠΕΡΙΟΔΟΣ).Width(15);
            columns.Bound(c => c.TERM).Width(10);
            columns.Bound(c => c.ΤΜΗΜΑ_ΟΝΟΜΑ).Width(20).Groupable(false);
            columns.Bound(c => c.ΤΜΗΜΑ_ΚΩΔ).Width(10).Hidden();
        })
        .Navigatable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Selectable()
        .Filterable()
        .HtmlAttributes(new { style="font-size:12px" })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(220))
        .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(60)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.ΤΜΗΜΑ_ΚΩΔ);
        })
        .Read(read => read.Action("Tmimata_Read", "Admin").Data("data1"))
        .Aggregates(a =>
        {
            a.Add(p => p.EIDIKOTITA_TEXT).Count();
        })
        )
        .Events(events => events.Change("change"))
        )
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">

    @(Html.Kendo().Grid<StudentGradesMiktaViewModel>()
    .Name("Child")
    .AutoBind(false)
    .HtmlAttributes(new { style = "font-size:12px" })
    .Navigatable()
    .Filterable()
    .Groupable()
    .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .Scrollable(scr => scr.Height(260))
    .Columns(columns =>
    {
        columns.Bound(f => f.ΑΜΚ).Width(10);
        columns.Bound(f => f.ΟΝΟΜΑΤΕΠΩΝΥΜΟ).Width(30);
        columns.Bound(f => f.ΜΑΘΗΜΑ).Width(50);
        columns.Bound(f => f.ΜΟΒΠ).Width(10).Filterable(false).Groupable(false);
        columns.Bound(f => f.ΒΕ).Width(10).Filterable(false).Groupable(false);
        columns.Bound(f => f.ΜΟΤΕ).Width(10).Filterable(false).Groupable(false);
        columns.Bound(f => f.ΜΟΕΠ).Width(10).Filterable(false).Groupable(false);
        columns.Bound(f => f.ΓΜΟ).Width(10).Filterable(false).Groupable(false);
        columns.Template(@<text></text>)
        .ClientTemplate(
        "<a class=\"k-button k-button-icontext\" href='" + Url.Action("AdminGradesApousiesPrint", "Admin") +
        "?tmimaId=#=ΚΩΔ_ΤΜΗΜΑ#&studentId=#=STUDENT_ID#' target = _blank><span class=\"k-icon k-justifyFull\"></span>Εκτύπωση</a>"
        ).Width(18);
    })
    .DataSource(ds => ds
        .Ajax()
        .Batch(false)
        .PageSize(60)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.STUDENT_ID);
        })
        .Read(read => read.Action("StudentGradesMikta_Read", "Admin").Data("data"))
        .Events(events => events.Error("error_handler"))
        )
    )

</div>


<script type="text/javascript">

    function ddlselect(e) {
        var schoolID = 0;
        var dataItem = this.dataItem(e.item.index());
        if (dataItem) {
            schoolID = dataItem.SCHOOL_ID;
        }
        if (schoolID) {
            $("#Master").data("kendoGrid").dataSource.read({ schoolId: schoolID });
        }
        else {
            MessageBoxAlert("Πρέπει να επιλέξετε σχολείο για προβολή των στοιχείων τμημάτων.")
            $("#Master").data("kendoGrid").dataSource.read({ schoolId: 0 });
        }
    };

    function data1() {
        var schoolID = $("#ddlschool").data("kendoDropDownList").value();
        if (schoolID) {
            return { schoolId: schoolID };
        }
        else {
            return { schoolId: 0 };
        }
    }

    function RefreshGrid(e) {
        var grid = $("#Master").data("kendoGrid");
        grid.dataSource.read();
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var tmimaID = dataItem.ΚΩΔ_ΤΜΗΜΑ;

        $("#Child").data("kendoGrid").dataSource.read({ tmimaId: tmimaID });
        $("#Child").css("display", "block");
    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");

        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;
        return {
            tmimaId: tmimaID
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
    }

</script>



