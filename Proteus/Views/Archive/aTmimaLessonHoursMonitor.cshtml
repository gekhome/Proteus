@using Proteus.DAL;
@using Proteus.Models;

@{
    ViewBag.Title = "Έλεγχος ωρών μαθημάτων";
    Layout = "~/Views/Shared/_SchoolLayout.cshtml";
}

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Έλεγχος υλοποιηθέντων ωρών μαθημάτων (αρχείο)</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">
        @Html.ActionLink("Επιστροφή", "Index", "School", null, new { @class = "btn btn-warning", style = "font-size:14px" })
    </span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">

    @(Html.Kendo().Grid<sqlTmimataViewModel>()
    .Name("Master")
    .Columns(columns =>
    {
        columns.Bound(c => c.ΤΜΗΜΑ_ΟΝΟΜΑ).Width(20).Groupable(false);
        columns.Bound(c => c.ΠΕΡΙΟΔΟΣ).Width(10);
        columns.Bound(c => c.TERM).Width(10);
        columns.Bound(c => c.EIDIKOTITA_TEXT).Width(70)
            .ClientFooterTemplate("Συνολικό πλήθος: #=count#")
            .ClientGroupFooterTemplate("Πλήθος: #=count#");
        columns.Template(
            @<text></text>)
        .ClientTemplate(
        "<a class=\"k-button k-button-icontext\" href='" + Url.Action("aDocLessonHoursMonitorPrint", "Archive") + "?tmimaId=#=ΤΜΗΜΑ_ΚΩΔ#' target = _blank><span class=\"k-icon k-justifyFull\"></span>Εκτύπωση</a>"
        ).Width(14);
        columns.Bound(c => c.ΤΜΗΜΑ_ΚΩΔ).Width(10).Hidden();
    })
    .Navigatable()
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .Selectable()
    .Filterable()
    .HtmlAttributes(new { style = "font-size:12px" })
    .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
    .Scrollable(scr => scr.Height(220))
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(60)
    .ServerOperation(false)
    .Model(model =>
    {
        model.Id(p => p.ΤΜΗΜΑ_ΚΩΔ);
    })
    .Read(read => read.Action("aTmimata_Read", "Archive"))
    .Aggregates(a =>
    {
        a.Add(p => p.EIDIKOTITA_TEXT).Count();
    })
    )
    .Events(events => events.Change("change"))
    )
</div>


<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">

    @(Html.Kendo().PanelBar()
    .Name("Panel1")
    .Items(items =>
    {
        items.Add()
            .Text("Υλοποιηθείσες ώρες μαθημάτων")
            .Selected(false)
            .Expanded(true)
            .Content(
            @<text>

        @(Html.Kendo().Grid<LessonHoursMonitorViewModel>()
        .Name("Child")
        .AutoBind(false)
        .HtmlAttributes(new { style = "font-size:12px" })
        .Navigatable()
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Scrollable(scr => scr.Height(260))
        .Columns(columns =>
        {
            columns.Bound(f => f.LESSON_TEXT).Width(70);
            columns.Bound(f => f.ΕΡΓΑΣΙΑ).Width(20);
            columns.Bound(f => f.ΩΡΕΣ_ΜΑΘΗΜΑ).Width(16)
                .ClientFooterTemplate("Σύνολο: #=sum#");
            columns.Bound(f => f.ΩΡΕΣ_ΟΡΙΟ).Width(16);
            columns.Bound(f => f.ΥΠΟΛΟΙΠΟ).Width(16)
                .ClientFooterTemplate("Σύνολο: #=sum#");
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(20)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.LESSON_ID);
            })
            .Read(read => read.Action("aLessonsTmima_Read", "Archive").Data("data"))
            .Aggregates(a => { 
                a.Add(f => f.ΩΡΕΣ_ΜΑΘΗΜΑ).Sum(); 
                a.Add(f => f.ΥΠΟΛΟΙΠΟ).Sum(); 
            })
            .Events(events => events.Error("error_handler"))
        )
        )
        </text>);
    })
        )

    </div>


<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Master").data("kendoGrid");
        grid.dataSource.read();
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;

        $("#Child").data("kendoGrid").dataSource.read({ tmimaId: tmimaID });
        $("#Child").css("display", "block");
    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");

        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;
        return {
            tmimaId: tmimaID
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
    }

</script>



