@model Proteus.Models.adkStudentDataViewModel
@using Proteus.DAL;
@using Proteus.Models;

@{
    ViewBag.Title = "Στοιχεία ατομικού δελτίου";
    Layout = "~/Views/Shared/_LayoutMin.cshtml";
}

<link href="@Url.Content("~/Content/mvcNotify.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/mvcNotify.js")" type="text/javascript"></script>
<script type="text/javascript">
    mvcNotify.autoClearTimeout = 10000;     //Unit of milliseconds.
    mvcNotify.typesToConsoleLog = "all";    //Log all types to console.
</script>

<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <style>
        /*.control-label {
            font-family: 'Segoe UI';
            white-space: pre-line;
        }*/

        .k-textbox {
            display: block;
            width: 100%;
            height: 34px;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.428571429;
            color: #555555;
            vertical-align: middle;
            background-color: #ffffff;
            border: 1px solid #cccccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
            transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        }

            .k-textbox:focus {
                border-color: #66afe9;
                outline: 0;
                -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
            }
    </style>
</head>

<div class="body-content" style="margin:10px 80px 10px 40px">
    <span style="margin:5px 0px 5px 5px;float:right;font-family:'Segoe UI';">
        <a class="btn btn-warning" style="font-family:'Segoe UI';font-size:13px" href="#" onclick="javascript:window.close();opener.window.focus();">Κλείσιμο καρτέλας</a>
    </span>

    <table class="col-md-12" style="border:solid;border-width:thin;margin:10px 20px 10px 20px">
        <tr>
            <th style="background-color:#494949;padding-left:20px;padding-top:4px;padding-bottom:4px">
                <font style="font-family:'Segoe UI';font-size:medium;color:white;">Στοιχεία ατομικού δελτίου</font>
            </th>
        </tr>
        <tr>
            <td>
                <div class="body-content">
                    @(Html.Kendo().TabStrip()
                        .Name("StudentTabStrip")
                        .Items(items =>
                        {
                            items.Add()
                            .Text("Στοιχεία (1)")
                            .Selected(true)
                            .ContentHtmlAttributes(new { style = "min-height: 280px" })
                            .Content(@<text>
                                <p></p>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΑΜΚ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΑΜΚ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΕΠΩΝΥΜΟ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΕΠΩΝΥΜΟ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΟΝΟΜΑ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΟΝΟΜΑ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΑΤΡΩΝΥΜΟ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΑΤΡΩΝΥΜΟ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΜΗΤΡΩΝΥΜΟ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΜΗΤΡΩΝΥΜΟ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.EIDIKOTITA_TEXT, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.EIDIKOTITA_TEXT, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΗΜΝΙΑ_ΓΕΝΝΗΣΗ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΗΜΝΙΑ_ΓΕΝΝΗΣΗ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΤΟΠΟΣ_ΓΕΝΝΗΣΗ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΤΟΠΟΣ_ΓΕΝΝΗΣΗ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΔΗΜΟΤΗΣ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΔΗΜΟΤΗΣ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΦΥΛΟ_ΚΕΙΜΕΝΟ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΦΥΛΟ_ΚΕΙΜΕΝΟ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <p></p>
                            </text>);
                            items.Add()
                            .Text("Στοιχεία (2)")
                            .ContentHtmlAttributes(new { style = "min-height: 280px" })
                            .Content(@<text>
                                <p></p>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡΑΞΗ_ΕΙΣΟΔΟΥ_ΗΜΝΙΑ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡΑΞΗ_ΕΙΣΟΔΟΥ_ΗΜΝΙΑ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡΑΞΗ_ΕΙΣΟΔΟΥ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡΑΞΗ_ΕΙΣΟΔΟΥ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΣΠΟΥΔΕΣ_ΔΙΑΡΚΕΙΑ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΣΠΟΥΔΕΣ_ΔΙΑΡΚΕΙΑ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡΑΞΗ_ΕΞΟΔΟΥ_ΚΕΙΜΕΝΟ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡΑΞΗ_ΕΞΟΔΟΥ_ΚΕΙΜΕΝΟ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡΑΚΤΙΚΗ_ΑΠΑΛΛΑΓΗ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡΑΚΤΙΚΗ_ΑΠΑΛΛΑΓΗ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡ_ΑΠΑΛΛΑΓΗ_ΩΡΕΣ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡ_ΑΠΑΛΛΑΓΗ_ΩΡΕΣ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡΑΚΤΙΚΗ_ΔΙΑΚΟΠΗ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡΑΚΤΙΚΗ_ΔΙΑΚΟΠΗ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡ_ΔΙΑΚΟΠΗ_ΗΜΝΙΑ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡ_ΔΙΑΚΟΠΗ_ΗΜΝΙΑ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-11" style="margin-bottom:5px">
                                    @Html.LabelFor(model => model.ΠΡΑΚΤΙΚΗ_ΠΕΡΑΤΩΣΗ, new { @class = "control-label col-md-3" })
                                    @Html.DisplayFor(model => model.ΠΡΑΚΤΙΚΗ_ΠΕΡΑΤΩΣΗ, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <p></p>
                            </text>);
                        })
                    )       @*--- End of Tabstrip ---*@
                </div>
            </td>
        </tr>
    </table>
</div>

<div class="body-content" style="margin:15px 60px 10px 60px">
    @(Html.Kendo().TabStrip()
        .Name("TabStrip")
        .SelectedIndex(0)
        .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
        .Items(items =>
        {
            items.Add().Text("Α' Εξάμηνο").Content(@<text>
                @(Html.Kendo().Grid<AtomikoDeltioViewModel>()
                .Name("term1")
                .Columns(columns =>
                {
                    columns.Bound(o => o.ΜΑΘΗΜΑ).Width(50);
                    columns.Bound(o => o.ΑΠΟΤΕΛΕΣΜΑ).Width(15);
                    columns.Bound(o => o.ΜΟΒΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΒΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΤΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΕΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΣΥΝΟΛΟ_ΩΡΕΣ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΟΡΙΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΑΠΟΥΣΙΕΣ).Width(12).Filterable(false);
                })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(20)
                    .Model(model =>
                    {
                        model.Id(p => p.ROW_ID);
                    })
                    .Read(read => read.Action("GradesApousies_Read", "Document", new { studentId = Model.STUDENT_ID, termId = 1 }))
                )
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(3))
                .Sortable()
                .Filterable()
                .HtmlAttributes(new { style = "display: block;font-size:12px" })
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Scrollable(scr => scr.Height(220))
                )
            </text>);
            items.Add().Text("Β' Εξάμηνο").Content(@<text>
                @(Html.Kendo().Grid<AtomikoDeltioViewModel>()
                .Name("term2")
                .Columns(columns =>
                {
                    columns.Bound(o => o.ΜΑΘΗΜΑ).Width(50);
                    columns.Bound(o => o.ΑΠΟΤΕΛΕΣΜΑ).Width(15);
                    columns.Bound(o => o.ΜΟΒΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΒΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΤΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΕΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΣΥΝΟΛΟ_ΩΡΕΣ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΟΡΙΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΑΠΟΥΣΙΕΣ).Width(10).Filterable(false);
                })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(20)
                    .Model(model =>
                    {
                        model.Id(p => p.ROW_ID);
                    })
                    .Read(read => read.Action("GradesApousies_Read", "Document", new { studentId = Model.STUDENT_ID, termId = 2 }))
                )
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(3))
                .Sortable()
                .Filterable()
                .HtmlAttributes(new { style = "display: block;font-size:12px" })
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Scrollable(scr => scr.Height(220))
                )
            </text>);
            items.Add().Text("Γ' Εξάμηνο").Content(@<text>
                @(Html.Kendo().Grid<AtomikoDeltioViewModel>()
                .Name("term3")
                .Columns(columns =>
                {
                    columns.Bound(o => o.ΜΑΘΗΜΑ).Width(50);
                    columns.Bound(o => o.ΑΠΟΤΕΛΕΣΜΑ).Width(15);
                    columns.Bound(o => o.ΜΟΒΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΒΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΤΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΕΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΣΥΝΟΛΟ_ΩΡΕΣ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΟΡΙΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΑΠΟΥΣΙΕΣ).Width(10).Filterable(false);
                })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(20)
                    .Model(model =>
                    {
                        model.Id(p => p.ROW_ID);
                    })
                    .Read(read => read.Action("GradesApousies_Read", "Document", new { studentId = Model.STUDENT_ID, termId = 3 }))
                )
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(3))
                .Sortable()
                .Filterable()
                .HtmlAttributes(new { style = "display: block;font-size:12px" })
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Scrollable(scr => scr.Height(220))
                )
            </text>);
            items.Add().Text("Δ' Εξάμηνο").Content(@<text>
                @(Html.Kendo().Grid<AtomikoDeltioViewModel>()
                .Name("term4")
                .Columns(columns =>
                {
                    columns.Bound(o => o.ΜΑΘΗΜΑ).Width(50);
                    columns.Bound(o => o.ΑΠΟΤΕΛΕΣΜΑ).Width(15);
                    columns.Bound(o => o.ΜΟΒΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΒΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΤΕ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟΕΠ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΜΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΣΥΝΟΛΟ_ΩΡΕΣ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΟΡΙΟ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΑΠΟΥΣΙΕΣ).Width(10).Filterable(false);
                })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(20)
                    .Model(model =>
                    {
                        model.Id(p => p.ROW_ID);
                    })
                    .Read(read => read.Action("GradesApousies_Read", "Document", new { studentId = Model.STUDENT_ID, termId = 4 }))
                )
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(3))
                .Sortable()
                .Filterable()
                .HtmlAttributes(new { style = "display: block;font-size:12px" })
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Scrollable(scr => scr.Height(220))
                )
            </text>);
            items.Add().Text("Πρακτική").Content(@<text>
                @(Html.Kendo().Grid<adkStudentPraktikiViewModel>()
                .Name("praktiki")
                .Columns(columns =>
                {
                    columns.Bound(o => o.ΕΡΓΟΔΟΤΗΣ_ΕΠΩΝΥΜΙΑ).Width(50);
                    columns.Bound(o => o.ΗΜΝΙΑ_ΑΠΟ).Width(15).Filterable(false);
                    columns.Bound(o => o.ΗΜΝΙΑ_ΕΩΣ).Width(15).Filterable(false);
                    columns.Bound(o => o.ΩΡΕΣ).Width(10).Filterable(false);
                    columns.Bound(o => o.ΠΕΡΙΟΔΟΣ).Width(10).Filterable(false);
                })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    .Model(model =>
                    {
                        model.Id(p => p.ΕΡΓ_ΠΡΑΚΤΙΚΗ_ΚΩΔ);
                    })
                    .Read(read => read.Action("PraktikiData_Read", "Document", new { studentId = Model.STUDENT_ID }))
                )
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(3))
                .Sortable()
                .Filterable()
                .HtmlAttributes(new { style = "display: block;font-size:12px" })
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Scrollable(scr => scr.Height(220))
                )
            </text>);
        })
        )   @*-- Tabstrip ---*@


</div>