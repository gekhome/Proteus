@model IEnumerable<Proteus.Models.StudentGradesViewModel>
@using Proteus.DAL;
@using Proteus.Models;


@{
    ViewBag.Title = "Βαθμολογίες σπουδαστών";
    Layout = "~/Views/Shared/_SchoolLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 11px;
    }
    .k-calendar {
        font-size: 12px;
    }
</style>


<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Βαθμολογίες σπουδαστών</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "School", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">

        @(Html.Kendo().Grid<sqlTmimataViewModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.Bound(c => c.ΤΜΗΜΑ_ΟΝΟΜΑ).Width(20).Groupable(false);
            columns.Bound(c => c.ΠΕΡΙΟΔΟΣ).Width(15);
            columns.Bound(c => c.TERM).Width(10);
            columns.Bound(c => c.EIDIKOTITA_TEXT).Width(60)
                .ClientFooterTemplate("Συνολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.ΤΜΗΜΑ_ΚΩΔ).Width(10).Hidden();
            columns.Bound(c => c.EIDIKOTITA_ID).Width(10).Hidden();
            columns.Bound(c => c.TERM_ID).Width(10).Hidden();
        })
        .Navigatable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Selectable()
        .Filterable()
        .HtmlAttributes(new { style = "font-size:12px" })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(200))
        .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(60)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.ΤΜΗΜΑ_ΚΩΔ);
        })
        .Read(read => read.Action("Tmimata_Read", "Programma"))
        .Aggregates(a =>
        {
            a.Add(p => p.EIDIKOTITA_TEXT).Count();
        })
        .Events(events => events.Error("error_handler"))
        )
        .Events(events => events.Change("change"))
        )
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:14px;background-color:dimgray;padding:4px 4px 4px 4px;min-height:40px">
    <label style="font-size:14px;font-weight:bold;color:white;margin-top:4px">Μάθημα : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlLesson")
        .DataTextField("LESSON_DESC")
        .DataValueField("LESSON_ID")
        .HtmlAttributes(new { style = "width:600px;font-size:12px;font-weight:bold" })
        .OptionLabel("Επιλογή μαθήματος...")
        .AutoBind(false)
        .Enable(false)
        .DataSource(source => { source.Read(read => { read.Action("GradesLessonsRead", "Programma").Data("filterLessons"); }).ServerFiltering(true); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
    <span style="float:right;font-family:'Segoe UI';font-size:12px">
        <input style="font-family:'Segoe UI';font-size:13px" type="button" onclick="deleteStudents()" value="Διαγραφή βαθμολογιών" class="btn btn-default" />
    </span>
    <span style="float:right;font-family:'Segoe UI';font-size:12px;margin-right:5px">
        <input style="font-family:'Segoe UI';font-size:13px" type="button" onclick="transferStudents()" value="Εισαγωγή σπουδαστών" class="btn btn-default" />
    </span>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">

        @(Html.Kendo().Grid(Model)
        .Name("Child")
        .AutoBind(false)
        .HtmlAttributes(new { style = "font-size:12px" })
        .Navigatable()
        .Filterable()
        .Editable(editable => editable.Mode(GridEditMode.InCell).CreateAt(GridInsertRowPosition.Top).DisplayDeleteConfirmation(false))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Scrollable(scr => scr.Height(240))
        .Columns(columns =>
        {
            columns.ForeignKey(f => f.ΜΑΘΗΤΗΣ_ΚΩΔ, (IEnumerable<qrySTUDENT_TMIMA_SELECTOR>)ViewData["students"], "STUDENT_ID", "ΟΝΟΜΑΤΕΠΩΝΥΜΟ")
                .Width(50).EditorTemplateName("ProgrammaStudentId");
            columns.Bound(f => f.ΒΑΘΜΟΣ_ΠΡΟΟΔΟΥ).Width(10).Filterable(false);
            columns.Bound(f => f.ΒΑΘΜΟΣ_ΤΕ).Width(10).Filterable(false);
            columns.Bound(f => f.ΒΑΘΜΟΣ_ΕΠ).Width(10).Filterable(false);
            columns.Bound(f => f.ΒΑΘΜΟΣ_ΜΟ).Width(14).Filterable(false).HtmlAttributes(new { style = "font-weight:bold" }).Title("ΜΟ (όχι μικτά)");
            columns.ForeignKey(f => f.ΧΑΡΑΚΤΗΡΙΣΜΟΣ, (IEnumerable<ΜΑΘΗΜΑ_ΧΑΡΑΚΤΗΡΙΣΜΟΣ>)ViewData["lesson_tags"], "ΧΑΡΑΚΤΗΡΙΣΜΟΣ_ΚΩΔ", "ΧΑΡΑΚΤΗΡΙΣΜΟΣ_ΛΕΚΤΙΚΟ").Width(25);
            columns.Command(command => command.Destroy()).Width(18);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
            toolBar.Save();
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(true)
            .PageSize(30)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.ΜΒ_ΚΩΔ);
                model.Field(p => p.ΧΑΡΑΚΤΗΡΙΣΜΟΣ).DefaultValue(1);
                model.Field(p => p.ΜΑΘΗΤΗΣ_ΚΩΔ).DefaultValue((int)ViewData["defaultStudent"]);
                model.Field(p => p.ΒΑΘΜΟΣ_ΠΡΟΟΔΟΥ).DefaultValue((float)0.00);
                model.Field(p => p.ΒΑΘΜΟΣ_ΤΕ).DefaultValue((float)0.00);
                model.Field(p => p.ΒΑΘΜΟΣ_ΕΠ).DefaultValue((float)0.00);
                model.Field(p => p.ΒΑΘΜΟΣ_ΜΟ).DefaultValue((float)0.00).Editable(false);
            })
            .Create(create => create.Action("Grades_Create", "Programma").Data("data"))
            .Read(read => read.Action("Grades_Read", "Programma").Data("data"))
            .Update(update => update.Action("Grades_Update", "Programma").Data("data"))
            .Destroy(destroy => destroy.Action("Grades_Destroy", "Programma"))
            .Events(events => events.Error("error_handler"))
        )
        )

    </div>


<script type="text/javascript">

    function transferStudents() {
        var masterGrid = $("#Master").data("kendoGrid");
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var lessonID = $("#ddlLesson").data("kendoDropDownList").value();
        var tmimaID = 0;
        if (dataItem) {
            tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;
        }
        if (tmimaID > 0 && lessonID) {
            $.ajax({
                url: '@Url.Action("InsertStudents", "Programma")?tmimaId=' + tmimaID + '&lessonId=' + lessonID,
                type: 'GET',
                data: "",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data != "") MessageBoxAlert(data);
                    $("#Child").data("kendoGrid").dataSource.read({ tmimaId: tmimaID, lessonId: lessonID });
                    $("#Child").css("display", "block");
                },
                error: function () {
                    MessageBoxAlert("Προέκυψε σφάλμα ανάκτησης δεδομένων.");
                }
            });
        }
        else {
            MessageBoxAlert("Πρέπει να επιλέξετε τμήμα και μάθημα πρώτα.");
        }
    };

    function deleteStudents() {
        var masterGrid = $("#Master").data("kendoGrid");
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var lessonID = $("#ddlLesson").data("kendoDropDownList").value();
        var tmimaID = 0;
        if (dataItem) {
            tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;
        }
        if (tmimaID > 0 && lessonID) {
            $.ajax({
                url: '@Url.Action("DeleteGrades", "Programma")?tmimaId=' + tmimaID + '&lessonId=' + lessonID,
                type: 'GET',
                data: "",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data != "") MessageBoxAlert(data);
                    $("#Child").data("kendoGrid").dataSource.read({ tmimaId: tmimaID, lessonId: lessonID });
                    $("#Child").css("display", "block");
                }
            });
        }
        else {
            MessageBoxAlert("Πρέπει να επιλέξετε τμήμα και μάθημα πρώτα.");
        }
    };

    function ddlselect(e) {
        var dataItem = this.dataItem(e.item.index());
        var lessonID = dataItem.LESSON_ID;

        var masterGrid = $("#Master").data("kendoGrid");
        var dataRow = masterGrid.dataItem(masterGrid.select());
        var tmimaID = dataRow.ΤΜΗΜΑ_ΚΩΔ;

        $("#Child").data("kendoGrid").dataSource.read({ tmimaId: tmimaID, lessonId: lessonID });
        $("#Child").css("display", "block");
    };

    function filterStudents() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;
        return {
            tmimaId: tmimaID,
        }
    }

    function filterLessons() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var eidikotitaID = dataItem.EIDIKOTITA_ID;
        var termID = dataItem.TERM_ID;
        return {
            eidikotitaId: eidikotitaID,
            termId: termID
        }
    }

    function RefreshGrid(e) {
        var grid = $("#Child").data("kendoGrid");
        grid.dataSource.read();
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;
        var eidikotitaID = dataItem.EIDIKOTITA_ID;
        var termID = dataItem.TERM_ID;

        var dropdownlist = $("#ddlLesson").data("kendoDropDownList");
        dropdownlist.dataSource.read();
        dropdownlist.enable();

        var lessonID = $("#ddlLesson").data("kendoDropDownList").value();

        $("#Child").data("kendoGrid").dataSource.read({ tmimaId: tmimaID, lessonId: lessonID });
        $("#Child").css("display", "block");
    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");
        var lessonID = $("#ddlLesson").data("kendoDropDownList").value();

        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;
        return {
            tmimaId: tmimaID,
            lessonId: lessonID
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Child").data("kendoGrid").dataSource.read();
    }

</script>



