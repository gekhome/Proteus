@model regPraktikiStudentViewModel
@using Proteus.DAL;
@using Proteus.Models;


@{
    ViewBag.Title = "Μητρώο σπουδαστών πρακτικής";
    Layout = "~/Views/Shared/_SchoolLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Μητρώο σπουδαστών σε πρακτική άσκηση</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "School", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<regPraktikiStudentViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.ΑΜΚ).Width(13);
            columns.Bound(c => c.ΟΝΟΜΑΤΕΠΩΝΥΜΟ).Width(40).Groupable(false)
                .ClientFooterTemplate("Συνολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");;
            columns.Bound(c => c.EIDIKOTITA_TEXT).Width(58);
            columns.Bound(c => c.ΤΜΗΜΑ_ΟΝΟΜΑ).Width(20);
            columns.Bound(c => c.SY_TEXT).Width(18);
            columns.Bound(c => c.ΠΕΡΙΟΔΟΣ).Width(16);
            columns.Bound(c => c.ΕΡΓΟΔΟΤΗΣ_ΕΠΩΝΥΜΙΑ).Width(50);
            columns.Bound(m => m.ΕΡΓ_ΠΡΑΚΤΙΚΗ_ΚΩΔ).Hidden();
        })
        .Selectable()
        .Groupable()
        .HtmlAttributes(new { style = "display: block;font-size:11px" })
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(340))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.ΕΡΓ_ΠΡΑΚΤΙΚΗ_ΚΩΔ);
                
            })            
            .Read(read => read.Action("RegPraktikiStudents_Read", "Ergodotes"))
            .Aggregates(a =>
            {
                a.Add(p => p.ΟΝΟΜΑΤΕΠΩΝΥΜΟ).Count();
            })
            .Events(events => events.Error("error_handler"))            
            )
        .Events(events => events.Change("change"))

        )  @* --- data grid ---*@
</div>

<div id="partialDiv" class="body-content" style="margin:15px 30px 5px 30px;font-size:small">
    @Html.Partial("RegPraktikiStudentPartial")
</div>

<script id="events" type="text/javascript">

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var praktikiID = dataItem.ΕΡΓ_ΠΡΑΚΤΙΚΗ_ΚΩΔ;
        //alert("ergodotisID=" + ergodotisID);
        // Handle data source of partial view
        $.ajax({
            url: '@Url.Action("GetPraktikiStudentRecord", "Ergodotes")?praktikiId=' + praktikiID,
            type: 'GET',
            data: "",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#partialDiv").html(data);
            },
            error: function () {
                MessageBoxAlert("Προέκυψε σφάλμα ανάκτησης δεδομένων.");
            }
        });
    }

    function RefreshGrid(e) {
        var grid = $("#grid").data("kendoGrid");
        grid.dataSource.read();

    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
    }

</script>





