@{
    ViewBag.Title = "Χάρτες Google";
    Layout = "~/Views/Shared/_LayoutMin.cshtml";
}

<script src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places&key=AIzaSyAYpYDaikC9z7unPiqs855I29CvWpN3ikA&&language=el&region=GR"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery.geocomplete.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/logger.js")" type="text/javascript"></script>


<div class="page-header" style="margin:5px 60px 5px 60px">
    <span style="margin:5px 60px 5px 60px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Χάρτες Google</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:16px">
        <a class="btn btn-default" style="font-family:'Segoe UI';font-size:16px" href="#" onclick="javascript:window.close();opener.window.focus();">Κλείσιμο καρτέλας</a>
    </span>
</div>

<div class="body-content" style="margin:10px 60px 5px 60px">
    <form>
        <span style="margin:5px 60px 5px 60px;font-family:'Segoe UI';font-size:x-large">
            <font style="color:#494949;float:left;font-family:'Segoe UI'">Χάρτες Google με εύρεση τοποθεσίας και απόστασης</font>
        </span>
        <p></p>
        <fieldset>
            <input id="geocomplete1" type="text" placeholder="Εισάγετε προέλευση" style="width:300px;font-family:Arial, Helvetica, sans-serif" />
            <input id="find1" class="btn btn-primary" type="button" value="Εύρεση" style="height:32px;font-size:14px;font-family:Arial, Helvetica, sans-serif" />
            <input id="geocomplete2" type="text" placeholder="Εισάγετε προορισμό" style="margin-left:10px;width:300px;font-family:Arial, Helvetica, sans-serif" />
            <input id="find2" class="btn btn-primary" type="button" value="Εύρεση" style="height:32px;font-size:14px;font-family:Arial, Helvetica, sans-serif" />
            <input id="calculate" class="btn btn-warning" type="button" value="Απόσταση" style="margin-left:5px;height:32px;font-size:14px;font-family:Arial, Helvetica, sans-serif" />
            <input id="refresh" class="btn btn-default" type="button" value="Ανανέωση" style="margin-left:5px;height:32px;font-size:14px;font-family:Arial, Helvetica, sans-serif" />
            <div id="examples">
                <br />
                Παραδείγματα:
                <a href="#">Άλιμος, Ελλάδα</a>&nbsp;
                <a href="#">Εθνικής Αντιστάσεως 8, Άλιμος</a>
            </div>
            <p></p>
            <div id="mainmap" class="map_canvas" style="width:970px;height:450px"></div>
            <p></p>
        </fieldset>
    </form>
    @*<pre id="logger" style="width:900px">Καταγραφή:</pre>*@
    <div id="output" style="margin-top:10px">Απόσταση</div>
    <div id="map" style="width:970px;height:400px;margin-top:10px"></div>
</div>

<script>

    var origin = [];
    var destination = [];


    $(function () {

        var options = {
            map: ".map_canvas"
        };

        $("#geocomplete1").geocomplete(options)
          .bind("geocode:result", function (event, result) {
              //$.log("Αποτέλεσμα: " + result.formatted_address);
              var latlong = result.geometry.location;
              origin[0] = latlong;
          });

        $("#find1").click(function () {
            //$("#geocomplete1").trigger("geocode");
            // this ensures that the input refreshes the map
            var geocoder = new google.maps.Geocoder();
            var map = new google.maps.Map(document.getElementById('mainmap'), {
                zoom: 16,
                scrollwheel: true,
                mapTypeId: "roadmap"
            });
            var address = $('#geocomplete1').val();
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        draggable: true,
                        position: results[0].geometry.location
                    });
                }
                else {
                    alert("Το Geocode δεν ήταν επιτυχές για την εξής αιτία: " + status);
                }
            });

        });

        $("#geocomplete2").geocomplete(options)
          .bind("geocode:result", function (event, result) {
              //$.log("Αποτέλεσμα: " + result.formatted_address);
              var latlong = result.geometry.location;
              destination[0] = latlong;
          });

        $("#find2").click(function () {
            //$("#geocomplete2").trigger("geocode");
            // this ensures that the input refreshes the map
            var geocoder = new google.maps.Geocoder();
            var map = new google.maps.Map(document.getElementById('mainmap'), {
                zoom: 16,
                scrollwheel: true,
                mapTypeId: "roadmap"
            });
            var address = $('#geocomplete2').val();
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        draggable: true,
                        position: results[0].geometry.location
                    });
                }
                else {
                    alert("Το Geocode δεν ήταν επιτυχές για την εξής αιτία: " + status);
                }
            });

        });

        $("#examples a").click(function () {
            $("#geocomplete1").val($(this).text()).trigger("geocode");
            return false;
        });

    });

    $("#calculate").click(function () {

        var centerlat = origin[0].lat();
        var centerlng = origin[0].lng();

        var bounds = new google.maps.LatLngBounds;
        var markersArray = [];

        var destinationIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=T|FF0000|000000';
        var originIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=A|FFFF00|000000';
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: centerlat, lng: centerlng },
            scrollwheel: true,
            zoom: 10
        });

        var geocoder = new google.maps.Geocoder;

        if (origin.length > 0 && destination.length > 0) {

            var service = new google.maps.DistanceMatrixService;
            service.getDistanceMatrix({
                origins: origin,
                destinations: destination,
                travelMode: 'DRIVING',
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, function (response, status) {
                if (status !== 'OK') {
                    alert('Προέκυψε σφάλμα στην getDistanceMatrix : ' + status);
                }
                else {
                    var originList = response.originAddresses;
                    var destinationList = response.destinationAddresses;
                    var outputDiv = document.getElementById('output');
                    //alert("origin: " + originList + ", destination: " + destinationList);
                    outputDiv.innerHTML = '';
                    deleteMarkers(markersArray);

                    var showGeocodedAddressOnMap = function (asDestination) {
                        var icon = asDestination ? destinationIcon : originIcon;
                        return function (results, status) {
                            if (status === 'OK') {
                                map.fitBounds(bounds.extend(results[0].geometry.location));
                                markersArray.push(new google.maps.Marker({
                                    map: map,
                                    position: results[0].geometry.location,
                                    icon: icon
                                }));
                            } else {
                                alert('Το Geocode απέτυχε με σφάλμα : ' + status);
                            }
                        };
                    };
                    for (var i = 0; i < originList.length; i++) {
                        var results = response.rows[i].elements;
                        geocoder.geocode({ 'address': originList[i] }, showGeocodedAddressOnMap(false));
                        for (var j = 0; j < results.length; j++) {
                            geocoder.geocode({ 'address': destinationList[j] }, showGeocodedAddressOnMap(true));
                            outputDiv.innerHTML += originList[i] + '<b>' + ' προς ' + '</b>' + destinationList[j] +
                                ': ' + '<b>' + results[j].distance.text + '</b>' + ' σε ' +
                                results[j].duration.text + '<br>';
                        }
                    }
                }
            });
        }
        else {
            alert("Πρέπει να εισάγετε προέλευση και προορισμό για τον υπολογισμό απόστασης.");
            var outputDiv = document.getElementById('output');
            outputDiv.innerHTML = '<i>' + 'Ο υπολογισμός απόστασης δεν ήταν εφικτός.' + '</i>'
        }
    });

    function deleteMarkers(markersArray) {
        for (var i = 0; i < markersArray.length; i++) {
            markersArray[i].setMap(null);
        }
        markersArray = [];
    }

    $("#refresh").click(function () {
        window.location.reload(true);
    });

</script>


